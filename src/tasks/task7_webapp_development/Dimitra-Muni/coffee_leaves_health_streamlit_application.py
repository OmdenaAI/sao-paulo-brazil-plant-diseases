# -*- coding: utf-8 -*-
"""Coffee Leaves Health Streamlit App.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DeEoJGIy_YW_-jIJGDZiDzVC_KQ5ajp7

## Task:7 Web App Development (Omdena São Paulo Chapter challenge)
  This colab notebook is created as the part of Omdena São Paulo Chapter challenge: **Classification of Plant Diseases in Brazilian Agriculture Using Computer Vision and Machine Learning**


  Collaborator: Dimitra Muni (muni.dimitra@gmail.com)
 - Objective:
  - To encourage the collaborators to develop their own version of Coffee Leaf Health prediction model.
  - Learn about Streamlit Interface, and integrate it with the model.
"""

!pip install -q streamlit

import matplotlib.pyplot as plt
import matplotlib.image as img
import numpy as np
import os
import tensorflow as tf
import pandas as pd
from tensorflow.keras import models,layers,utils

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import numpy as np
# import pandas as pd
# from PIL import Image
# from tensorflow.keras import models,layers,utils
# 
# #Ensure that the Challenge short cut is added on your google drive in order to following command to work
# model=models.load_model('/content/drive/MyDrive/SaoPauloChapter_Plants-Disease_2023-Aug-02/Task-4-Model(s) Building/Dimitra-Muni/model_CNN1_BRACOL.h5')
# 
# #configuration of page
# st.set_page_config(page_icon=None, layout="centered", initial_sidebar_state="expanded", menu_items={'Report a bug':'mailto:muni.dimitra@gmail.com'})
# 
# st.title('Coffee Leaves Health Classification using CNN')
# 
# #Header
# st.header('Upload the image of a coffee leaf')
# 
# #Upload
# file=st.file_uploader('',type=['jpg','png'])
# 
# class_names=['healthy', 'miner', 'rust', 'phoma', 'cercospora']
# 
# #Predict Function
# def predict(input_image,model):
#     image=np.asarray(input_image).reshape(-1, 256, 256, 3)
#     predictions=model.predict(image)[0].flatten()
#     class_confidence=dict(zip(class_names,np.single(predictions) ))
#     return class_confidence
# 
# 
# #display the image
# if file is not None:
#   img=Image.open(file,mode='r')
#   st.image(img,use_column_width='always')
#   confidence=predict(img,model)
#   st.write('Class confidence for the input image :\n')
#   st.write(confidence)
#   st.bar_chart(confidence)
#   st.markdown('This app is developed is part of **Omdena São Paulo Chapter** challenge: *Classification of Plant Diseases in Brazilian Agriculture Using Computer Vision and Machine Learning*')
# 
# 
# 
# 
#

"""#Steps to run deploy the streamlit app


1.  Run the following *!wget -q -O - ipv4.icanhazip.com*
2.  Copy the IP address obtained in the step:1
3.  Run the following *! streamlit run app.py & npx localtunnel --port 8501*
4.  Click on the url, and when re-directed plug in Endpoint IP address saved in step:2


"""

!wget -q -O - ipv4.icanhazip.com

! streamlit run app.py & npx localtunnel --port 8501

"""# References

- 1  [Image classification WEB APP with Python and Streamlit | Pneumonia classifier | Computer vision](https://www.youtube.com/watch?v=n_eMARPqBZI)
- 2 [Streamlit Library](https://docs.streamlit.io/library/api-reference)
- 3 [GitHub: localtunnel](https://github.com/localtunnel/localtunnel)
"""